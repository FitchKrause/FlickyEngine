<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_npc_sth3_rhinobot</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>par_enemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Rhino Variables.

    // State:
       Rhino_State = 0;        // 0 - Idle, 1 - Charging, 2 - Attacking, 3 - Turning around.
    
    // Rendering:
       Rhino_XSpd       =  0;  // How fast the Rhino moves.
       Rhino_YSpd       =  0;  // How fast the Rhino moves, vertically.
       Rhino_Frame      =  0;  // Current Frame of the rhino.
       Rhino_Dust       =  0;  // Whether or not to draw the charging dust.
       Rhino_Direction  = -1;  // Direction the Rhino is facing.
       Rhino_FrameTimer = 30;  // How long the Rhino charges. 
       Rhino_Grounded   =  0;  // Whether or not the rhino grounded.
       Rhino_GroundY    = -1;  // Keeps track of the ground position.
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Rhino States and X/Y.

    // Init. Terrain.
    
    // Idling: (Default)
       if(Rhino_State == 0){
          Rhino_XSpd  =  Rhino_Direction*0.8;  
       }
       
    // Trigger Charging:
       _char     = instance_nearest(x,y, par_character);   
       if(_char != noone &amp;&amp; Rhino_Frame == 0){
          if(Rhino_State == 0 &amp;&amp; abs(_char.x - x) &lt; 100){
             Rhino_State = 1;
          }
       }    
       
    // Charging:
       if(Rhino_State == 1){
          Rhino_XSpd        =  0;
          Rhino_Dust        =  1;
          if(Rhino_FrameTimer &gt; 0){
             Rhino_FrameTimer -=  1;  
          }else{
             Rhino_FrameTimer = 30;
             Rhino_State      = 2;
          }
       }else { Rhino_Dust = 0 } 

    // Attacking:
       if(Rhino_State == 2){
          Rhino_XSpd   = Rhino_Direction*4;
       }       
        
    // Change to Turning around:
       _char     = instance_nearest(x, y, par_character);
       if(_char != noone){
          if(Rhino_State == 2 &amp;&amp; sign(x-(_char.x)) == Rhino_Direction){
             Rhino_State  = 3;
             Rhino_XSpd   = 0;
          }
       }
       
    // Turning around:
       if(Rhino_State == 3){
          Rhino_FrameTimer -= 1;
          if(Rhino_FrameTimer == 25) { Rhino_Frame = 1; }
          if(Rhino_FrameTimer == 20) { Rhino_Frame = 2; }
          if(Rhino_FrameTimer == 15) { Rhino_Frame = 0; Rhino_FrameTimer = 30; Rhino_State = 0; Rhino_Direction = -Rhino_Direction; }
       }
       
    // Update X / Y:
       x += Rhino_XSpd;
       y += Rhino_YSpd;
       
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw the Rhino.

    // Main Sprite:
       draw_sprite_ext(sprite_index, Rhino_Frame, floor(x), floor(y), Rhino_Direction, 1, 0, c_white, 1);
    
    // Dust Particles:
       if(Rhino_Dust){
          draw_sprite_ext(spr_npc_sth3_rhinobot_dust, global.ObjectTime div 60, floor(x-Rhino_Direction*44), floor(y+15), Rhino_Direction, 1, 0, c_white, 1);
       }
    
       draw_text(x, y-50, Rhino_FrameTimer);
       draw_text(x, y-70, Rhino_State);       
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Rhino_State = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
