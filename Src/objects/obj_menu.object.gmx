<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Variables.

    MnuStripe   [0] = 0
    MnuStripePos[0] = -180; 
    MnuStripeDir[0] = "Right";
    
    MnuStripe   [1] = 2
    MnuStripePos[1] = 180;     
    MnuStripeDir[1] = "Up";    
    
    MnuStripe   [2] = 6;
    MnuStripePos[2] = 180;       
    MnuStripeDir[2] = "Left";     
      
    MnuStripe   [3] = "";
    MnuStripePos[3] = "";   
    MnuStripeDir[3] = "";         
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw Menu.

 // Stripes:
    for(i=0; i&lt;4; i++){
       if(MnuStripe[i] != ""){
          if(MnuStripePos[i] != 0){
             switch(MnuStripeDir[i]){
                    case "Up":{
                          MnuStripePos[i] = max(0, MnuStripePos[i]-6);                       
                          break;                 
                    }
                    case "Down":{
                          MnuStripePos[i] = min(0, MnuStripePos[i]+6);                 
                          break;                 
                    }
                    case "Right":{
                          MnuStripePos[i] = min(0, MnuStripePos[i]+6);                 
                       break;                 
                    }
                    case "Left":{
                          MnuStripePos[i] = max(0, MnuStripePos[i]-6);                 
                          break;
                    }
             }
          }
          if(MnuStripeDir[i] = "Right" || MnuStripeDir[i] = "Left"){
             draw_sprite(spr_menu_stripes, MnuStripe[i], 0+MnuStripePos[i], 0);
          }
          if(MnuStripeDir[i] = "Up" || MnuStripeDir[i] = "Down"){
             draw_sprite(spr_menu_stripes, MnuStripe[i], 0, 0+MnuStripePos[i]);
          }          
       }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
